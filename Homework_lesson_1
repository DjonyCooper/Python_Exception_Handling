#  Первая функция:
# мы хотим имея год, узнать сколько дней в контретном месяце (если значение месяца будет за пределами 1-12,
# мы получим calendar.IllegalMonthError, объигрываем его используя if, else, так же если пользователь задаст str значение
# вместо int получим TypeError - обработаем его через try, except

import calendar
def exp_1(year, month):
    try:
        if month <= 12 and month >=1:
            days = calendar.monthrange(year, month)
            return print(f'{days[1]} день/дней')
        else:
            return print(f'Заданное Вами значение месяца: {month} - не корректно, '
                         f'повторите запрос снова используя для задания месяца значение в диапазоне от 1 до 12')
    except TypeError:
        return print(f'TypeError: Невозможно получить значение, получен некорректный тип данных (оба значения должны быть целым числом)')


# Вторая функция:
# операция сложения, функция принимает 2 значения, после чего выполняет сложение. Если в качестве одного
# из значение прилетит не число, получим TypeError. Обработаем, через try, except.

def exp_2(num_a, num_b):
    try:
        return print(num_a + num_b)
    except TypeError:
        return print('TypeError: Вычисление невозможно, задан не корректный тип данных (оба значения должны быть числом).')

# Третья функция:
# Функция хранит в себе список n-элементов, если мы попытаемся получить значение элемента за пределами списка, закономерно получим ошибку:
# IndexError. Обработаем ее, через try, except. Так же если вместо значения пользователь отправит строку - получим TypeError,
# обработаем так же.

def exp_3(num):
    try:
        dict = [1, 2, 3]
        return print(f'Значение индеса {num} = {dict[num]}')
    except IndexError:
        return print(f'IndexError: запрошенный индекс {num} - находиться за пределами списка '
                     f'(список содержит: {len(dict)} значения)')
    except TypeError:
        return print(f'TypeError: запрошенный индекс {num} - является строкой или не является целым числом')
